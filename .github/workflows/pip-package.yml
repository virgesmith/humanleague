# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python (pip) build

on:
  push:
    branches: [ main ]
    tags: '**'
  pull_request:
    branches: [ main ]
  schedule:
    # 6:00 every saturday
    - cron:  '0 6 * * SAT'

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v3
    - name: "pip: Python ${{ matrix.python-version }} / ${{ matrix.os }}"
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pybind11 pytest
    - name: Build
      run: |
        python -m pip install .
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        python -m pytest
    - name: Bump version
      run: |
        python -m pip install bump2version
        bump2version patch
    - name: Package
      run: |
        python setup.py sdist
    - name: artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dt_utils_${{ matrix.python-version }}
        path: |
          dist
    - name: Publish
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/