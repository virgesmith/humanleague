# Build environments
environment:
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      TEST_LANGUAGE: "Python"
      PYTHON: "C:\\Python38-x64"
      PYTHON_ARCH: 64
      MSVC_VERSION: "Visual Studio 19 Win64"

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      TEST_LANGUAGE: "Python"
      PYTHON: "C:\\Python39-x64"
      PYTHON_ARCH: 64
      MSVC_VERSION: "Visual Studio 19 Win64"

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      TEST_LANGUAGE: "Python"
      PYTHON: "C:\\Python37-x64"
      PYTHON_ARCH: 64
      MSVC_VERSION: "Visual Studio 19 Win64"

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      TEST_LANGUAGE: "R"
      PYTHON: ""
      PYTHON_ARCH: ""
      MSVC_VERSION: ""

    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
      PYTHON: "3.7"
      APPVEYOR_YML_DISABLE_PS_LINUX: true

    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004
      PYTHON: "3.8"
      APPVEYOR_YML_DISABLE_PS_LINUX: true

    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004
      PYTHON: "3.9"
      APPVEYOR_YML_DISABLE_PS_LINUX: true

    - APPVEYOR_BUILD_WORKER_IMAGE: macOS
      PYTHON: "3.7"
      APPVEYOR_YML_DISABLE_PS_LINUX: true

    - APPVEYOR_BUILD_WORKER_IMAGE: macOS
      PYTHON: "3.8"
      APPVEYOR_YML_DISABLE_PS_LINUX: true

    - APPVEYOR_BUILD_WORKER_IMAGE: macOS
      PYTHON: "3.9"
      APPVEYOR_YML_DISABLE_PS_LINUX: true

stack: python %PYTHON%

# fail fast
matrix:
  fast_finish: true

init:
  - ps: |
      if ($env:TEST_LANGUAGE -eq "R") {
        $ErrorActionPreference = "Stop"
        Invoke-WebRequest http://raw.github.com/krlmlr/r-appveyor/master/scripts/appveyor-tool.ps1 -OutFile "..\appveyor-tool.ps1"
        Import-Module '..\appveyor-tool.ps1'
      }
      if ($env:TEST_LANGUAGE -eq "Python") {
        Write-Host "$env:PYTHON $env:PYTHON_ARCH $env:MSVC_VERSION"
        $python = $env:PYTHON + "\python.exe"
        & $python --version
      }

install:
  - ps: |
      if ($env:TEST_LANGUAGE -eq "R") {
        Bootstrap
      }
      if ($env:TEST_LANGUAGE -eq "Python") {
        $python = $env:PYTHON + "\python.exe"
        & $python -m pip install --upgrade pip wheel setuptools --no-warn-script-location
        & $python -m pip install numpy --no-warn-script-location
      }

cache:
  - C:\RLibrary

build_script:
  # install deps
  - ps: if ($env:TEST_LANGUAGE -eq "R") { TravisTool install_deps }

test_script:
  - ps: if ($env:TEST_LANGUAGE -eq "R") { TravisTool run_tests }
  - cmd: if "%TEST_LANGUAGE%" == "Python" ( "%PYTHON%\python.exe" setup.py test ) else ( echo %TEST_LANGUAGE% )
  - sh: python setup.py test

on_failure:
  - 7z a failure.zip *.Rcheck\*
  - appveyor PushArtifact failure.zip

artifacts:
  - path: dist\*
    name: Dist

  - path: '*.Rcheck\**\*.log'
    name: Logs

  - path: '*.Rcheck\**\*.out'
    name: Logs

  - path: '*.Rcheck\**\*.fail'
    name: Logs

  - path: '*.Rcheck\**\*.Rout'
    name: Logs

  - path: '\*_*.tar.gz'
    name: Bits

  - path: '\*_*.zip'
    name: Bits
